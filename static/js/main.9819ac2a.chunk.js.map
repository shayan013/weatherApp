{"version":3,"sources":["components/Weather.js","components/api.js","components/Searchbar.js","App.js","index.js"],"names":["Weather","city_weather","className","name","main","temp","wind","speed","humidity","onClick","window","location","reload","api","api_url","api_key","Searchbar","showData","useState","cityName","setName","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","App","lat","setLat","lon","setLon","setLocation","setCityWeather","useEffect","a","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","full_api_latlon","fetch","then","res","json","data","console","log","full_api_byCity","undefined","ReactDOM","render","document","getElementById"],"mappings":"qPAiCeA,MA9Bf,YAAoC,IAAjBC,EAAgB,EAAhBA,aAIjB,OACE,qBAAKC,UAAU,WAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAU,SAAf,SACwB,aAArBD,EAAaE,KACZ,2CAEA,6BAAKF,EAAaE,SAItB,sBAAKD,UAAU,cAAf,UACE,oBAAGA,UAAU,OAAb,UAAqBD,EAAaG,KAAKC,KAAvC,QACA,oBAAGH,UAAU,QAAb,oBAA6BD,EAAaK,KAAKC,MAA/C,WACA,oBAAGL,UAAU,MAAb,uBAA8BD,EAAaG,KAAKI,SAAhD,YAEF,wBAAQN,UAAU,UAAUO,QApBpC,WACEC,OAAOC,SAASC,UAmBV,6BClBKC,G,MANH,CACV,CACEC,QAAS,kDACTC,QAAS,sCCwBEC,MAxBf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAiBC,EAAjB,KAOA,OACE,qBAAKlB,UAAU,qBAAf,SACE,uBAAMA,UAAU,gBAAgBmB,SAPpC,SAAoBC,GAClBA,EAAEC,iBACFN,EAASE,GACTC,EAAQ,KAIN,UACE,uBACElB,UAAU,SACVsB,KAAK,OACLC,YAAY,iBACZC,MAAOP,EACPQ,SAAU,SAACL,GAAD,OAAOF,EAAQE,EAAEM,OAAOF,UAEpC,mBAAGxB,UAAU,sBC8BN2B,MA9Cf,WACE,MAAsBX,mBAAS,IAA/B,mBAAOY,EAAP,KAAYC,EAAZ,KACA,EAAsBb,mBAAS,IAA/B,mBAAOc,EAAP,KAAYC,EAAZ,KACA,EAAgCf,mBAAS,IAAzC,mBAAiBgB,GAAjB,WACA,EAAuChB,mBAAS,IAAhD,mBAAOjB,EAAP,KAAqBkC,EAArB,KAEAC,qBAAU,WACR,IAAMnB,EAAQ,uCAAG,WAAOa,EAAKE,GAAZ,eAAAK,EAAA,6DACf3B,OAAO4B,UAAUC,YAAYC,oBAAmB,SAACC,GAC/CV,EAAOU,EAASC,OAAOC,UACvBV,EAAOQ,EAASC,OAAOE,cAEnBC,EALS,UAKYhC,EAAI,GAAGC,QALnB,gBAKkCgB,EALlC,gBAK6CE,EAL7C,+BAKuEnB,EAAI,GAAGE,SAL9E,SAOT+B,MAAMD,GACTE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLf,EAAee,GACfhB,EAAY,IACZiB,QAAQC,IAAIF,MAZD,2CAAH,wDAedjC,EAASa,EAAKE,KACb,CAACF,EAAKE,IAET,IAAMf,EAAQ,uCAAG,WAAON,GAAP,eAAA0B,EAAA,6DACTgB,EADS,UACYxC,EAAI,GAAGC,QADnB,cACgCH,EADhC,gCACgEE,EAAI,GAAGE,SADvE,SAGT+B,MAAMO,GACTN,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLf,EAAee,GACfhB,EAAY,OAPD,2CAAH,sDAUd,OACE,sBAAKhC,UAAU,MAAf,UACE,cAAC,EAAD,CAAWe,SAAUA,SACCqC,GAArBrD,EAAaG,KACZ,cAAC,EAAD,CAASH,aAAcA,IAEvB,4B,MCxCRsD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9819ac2a.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./weather.css\";\r\nfunction Weather({ city_weather }) {\r\n  function refresh() {\r\n    window.location.reload();\r\n  }\r\n  return (\r\n    <div className=\"ui cards\">\r\n      <div className=\"card main\">\r\n        <div className=\"content\">\r\n          <div className=\"header\">\r\n            {city_weather.name == \"Allahabad\" ? (\r\n              <h1>Islamabad</h1>\r\n            ) : (\r\n              <h1>{city_weather.name}</h1>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"description\">\r\n            <p className=\"temp\">{city_weather.main.temp} C</p>\r\n            <p className=\"speed\">Speed: {city_weather.wind.speed} m/s </p>\r\n            <p className=\"hum\">Humidity: {city_weather.main.humidity} % </p>\r\n          </div>\r\n          <button className=\"refresh\" onClick={refresh}>\r\n            Refresh\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Weather;\r\n","const api = [\r\n  {\r\n    api_url: \"https://api.openweathermap.org/data/2.5/weather\",\r\n    api_key: \"715f9782bcd96417d975c375cb0801f0\",\r\n  },\r\n];\r\nexport default api;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nfunction Searchbar({ showData }) {\r\n  const [cityName, setName] = useState(\"\");\r\n\r\n  function searchCity(e) {\r\n    e.preventDefault();\r\n    showData(cityName);\r\n    setName(\"\");\r\n  }\r\n  return (\r\n    <div className=\"ui category search\">\r\n      <form className=\"ui icon input\" onSubmit={searchCity}>\r\n        <input\r\n          className=\"prompt\"\r\n          type=\"text\"\r\n          placeholder=\"Search city...\"\r\n          value={cityName}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <i className=\"search icon\"></i>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Searchbar;\r\n","import { useState, useEffect } from \"react\";\nimport Weather from \"./components/Weather\";\nimport \"./app.css\";\nimport api from \"./components/api\";\nimport Searchbar from \"./components/Searchbar\";\nfunction App() {\n  const [lat, setLat] = useState(\"\");\n  const [lon, setLon] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [city_weather, setCityWeather] = useState([]);\n\n  useEffect(() => {\n    const showData = async (lat, lon) => {\n      window.navigator.geolocation.getCurrentPosition((position) => {\n        setLat(position.coords.latitude);\n        setLon(position.coords.longitude);\n      });\n      const full_api_latlon = `${api[0].api_url}?lat=${lat}&lon=${lon}&units=metric&appid=${api[0].api_key}`;\n\n      await fetch(full_api_latlon)\n        .then((res) => res.json())\n        .then((data) => {\n          setCityWeather(data);\n          setLocation(\"\");\n          console.log(data);\n        });\n    };\n    showData(lat, lon);\n  }, [lat, lon]);\n\n  const showData = async (location) => {\n    const full_api_byCity = `${api[0].api_url}?q=${location}&&units=metric&appid=${api[0].api_key}`;\n\n    await fetch(full_api_byCity)\n      .then((res) => res.json())\n      .then((data) => {\n        setCityWeather(data);\n        setLocation(\"\");\n      });\n  };\n  return (\n    <div className=\"app\">\n      <Searchbar showData={showData} />\n      {city_weather.main != undefined ? (\n        <Weather city_weather={city_weather} />\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}